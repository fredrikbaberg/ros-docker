<launch>

  <!-- For gazebo world -->
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="false"/>
  <arg name="headless" default="true"/>
  <arg name="debug" default="false"/>
  <arg name="init_pos_x" default="0.0"/>
  <arg name="init_pos_y" default="0.0"/>
  <arg name="init_pos_z" default="0.1"/>
  <!-- For youbot -->
  <!-- For Kinova -->
  <arg name="kinova_robotType" default="j2n6s300"/>
  <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>
  <arg name="use_trajectory_controller" default="true"/>
  <arg name="is7dof" default="false"/>

  <!-- Launch world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="world_name" value="worlds/empty.world"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro.py --inorder '$(find youbot_jaco_gazebo)/urdf/youbot_jaco.urdf.xacro'" />

  <!-- Spawn robot in Gazebo world. -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_robot" respawn="false" output="screen"
    args="-param robot_description
          -urdf
          -x $(arg init_pos_x)
          -y $(arg init_pos_y)
          -z $(arg init_pos_z)
          -model youbot_$(arg kinova_robotName)">
  </node>

  <!-- youbot related -->
  <group>
    <rosparam file="$(find youbot_gazebo_control)/config/joint_state_controller.yaml" command="load"/> 
    <node pkg="controller_manager" type="spawner" name="joint_state_controller_spawner" args="joint_state_controller" respawn="false" output="screen" />
    <rosparam file="$(find youbot_gazebo_control)/config/base_controller.yaml" command="load" />  
    <node pkg="controller_manager" type="spawner" name="base_controller_spawner" args="base_controller" respawn="false" output="screen" />
  </group>

  <!-- Kinova Jaco related -->
  <group>
    <rosparam file="$(find kinova_control)/config/$(arg kinova_robotName)_control.yaml" command="load"/>
    <node pkg="controller_manager" type="spawner" name="$(arg kinova_robotName)_trajectory_controller" output="screen" args="$(arg kinova_robotName)/effort_joint_trajectory_controller $(arg kinova_robotName)/effort_finger_trajectory_controller"/>
    <!-- <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher_jaco" respawn="false" output="screen"> 
      <remap from="/joint_states" to="/$(arg kinova_robotName)/joint_states"/>
    </node> -->
    <node pkg="kinova_control" type="move_robot.py" name="command_robot_home_pose" respawn="false" output="screen" args="$(arg kinova_robotType)"/>
  </group>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="100.0" />
  </node>
</launch>
